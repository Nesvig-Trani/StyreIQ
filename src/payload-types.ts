/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji'

export interface Config {
  auth: {
    users: UserAuthOperations
  }
  blocks: {}
  collections: {
    organization: Organization
    'welcome-emails': WelcomeEmail
    users: User
    'social-medias': SocialMedia
    organization_access: OrganizationAccess
    policies: Policy
    acknowledgments: Acknowledgment
    flags: Flag
    flagHistory: FlagHistory
    flagComments: FlagComment
    audit_log: AuditLog
    'payload-jobs': PayloadJob
    'payload-locked-documents': PayloadLockedDocument
    'payload-preferences': PayloadPreference
    'payload-migrations': PayloadMigration
  }
  collectionsJoins: {
    organization: {
      children: 'organization'
    }
    flags: {
      history: 'flagHistory'
    }
  }
  collectionsSelect: {
    organization: OrganizationSelect<false> | OrganizationSelect<true>
    'welcome-emails': WelcomeEmailsSelect<false> | WelcomeEmailsSelect<true>
    users: UsersSelect<false> | UsersSelect<true>
    'social-medias': SocialMediasSelect<false> | SocialMediasSelect<true>
    organization_access: OrganizationAccessSelect<false> | OrganizationAccessSelect<true>
    policies: PoliciesSelect<false> | PoliciesSelect<true>
    acknowledgments: AcknowledgmentsSelect<false> | AcknowledgmentsSelect<true>
    flags: FlagsSelect<false> | FlagsSelect<true>
    flagHistory: FlagHistorySelect<false> | FlagHistorySelect<true>
    flagComments: FlagCommentsSelect<false> | FlagCommentsSelect<true>
    audit_log: AuditLogSelect<false> | AuditLogSelect<true>
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>
    'payload-locked-documents':
      | PayloadLockedDocumentsSelect<false>
      | PayloadLockedDocumentsSelect<true>
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>
  }
  db: {
    defaultIDType: number
  }
  globals: {}
  globalsSelect: {}
  locale: null
  user: User & {
    collection: 'users'
  }
  jobs: {
    tasks: {
      flagInactiveAccounts: TaskFlagInactiveAccounts
      detectRisks: TaskDetectRisks
      inline: {
        input: unknown
        output: unknown
      }
    }
    workflows: unknown
  }
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string
    password: string
  }
  login: {
    email: string
    password: string
  }
  registerFirstUser: {
    email: string
    password: string
  }
  unlock: {
    email: string
    password: string
  }
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organization".
 */
export interface Organization {
  id: number
  name: string
  type: 'university' | 'faculty' | 'department' | 'office' | 'project'
  parentOrg?: (number | null) | Organization
  admin: number | User
  backupAdmins?: (number | User)[] | null
  email?: string | null
  phone?: string | null
  status?: ('active' | 'inactive' | 'pending_review') | null
  description?: string | null
  delegatedPermissions?: boolean | null
  path?: string | null
  depth?: number | null
  children?: {
    docs?: (number | Organization)[]
    hasNextPage?: boolean
    totalDocs?: number
  }
  disabled?: boolean | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number
  name: string
  role?: ('super_admin' | 'unit_admin' | 'social_media_manager') | null
  status?: ('active' | 'inactive' | 'rejected' | 'pending_activation') | null
  admin_policy_agreement: boolean
  date_of_last_policy_review?: string | null
  date_of_last_training?: string | null
  organizations?: (number | Organization)[] | null
  reject_reason?: string | null
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  password?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "welcome-emails".
 */
export interface WelcomeEmail {
  id: number
  instructions: string
  responsibilities?:
    | {
        responsibility: string
        id?: string | null
      }[]
    | null
  policyLinks?:
    | {
        id: string | null
        title: string
        url: string
      }[]
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-medias".
 */
export interface SocialMedia {
  id: number
  name: string
  profileUrl: string
  platform: string
  contactEmail?: string | null
  contactPhone?: string | null
  passwordUpdatedAt?: string | null
  isEnabledTwoFactor?: boolean | null
  isInUseSecurePassword?: boolean | null
  isAcceptedPolicies?: boolean | null
  isCompletedTrainingAccessibility?: boolean | null
  isCompletedTrainingRisk?: boolean | null
  isCompletedTrainingBrand?: boolean | null
  hasKnowledgeStandards?: boolean | null
  organization: number | Organization
  primaryAdmin: number | User
  backupAdmin: number | User
  status: 'active' | 'inactive' | 'in_transition' | 'pending_approval'
  deactivationReason?: string | null
  /**
   * Automatically set if the account has no public activity for 30+ days and is Active or In Transition.
   */
  inactiveFlag?: boolean | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organization_access".
 */
export interface OrganizationAccess {
  id: number
  organization?: (number | null) | Organization
  user?: (number | null) | User
  type?: ('temporary' | 'permanent') | null
  start_date?: string | null
  end_date?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies".
 */
export interface Policy {
  id: number
  version?: number | null
  text?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  author?: (number | null) | User
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "acknowledgments".
 */
export interface Acknowledgment {
  id: number
  policy?: (number | null) | Policy
  user?: (number | null) | User
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flags".
 */
export interface Flag {
  id: number
  flagType?: string | null
  affectedEntity?:
    | ({
        relationTo: 'users'
        value: number | User
      } | null)
    | ({
        relationTo: 'social-medias'
        value: number | SocialMedia
      } | null)
  organization?: (number | null) | Organization
  status?: ('resolved' | 'pending' | 'not_applicable') | null
  detectionDate?: string | null
  source?: ('automated' | 'manual') | null
  lastActivity?: string | null
  history?: {
    docs?: (number | FlagHistory)[]
    hasNextPage?: boolean
    totalDocs?: number
  }
  description?: string | null
  suggestedAction?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flagHistory".
 */
export interface FlagHistory {
  id: number
  flag?: (number | null) | Flag
  user?: (number | null) | User
  action?: ('created' | 'status_changed' | 'comment') | null
  prevStatus?: ('resolved' | 'pending' | 'not_applicable') | null
  newStatus?: ('resolved' | 'pending' | 'not_applicable') | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flagComments".
 */
export interface FlagComment {
  id: number
  flag?: (number | null) | Flag
  user?: (number | null) | User
  comment?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "audit_log".
 */
export interface AuditLog {
  id: number
  user: number | User
  action: 'create' | 'update' | 'delete' | 'approval' | 'flag_resolution' | 'policy_acknowledgment'
  entity: string
  prev?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  current?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  organizations?: (number | Organization)[] | null
  document?:
    | ({
        relationTo: 'users'
        value: number | User
      } | null)
    | ({
        relationTo: 'organization'
        value: number | Organization
      } | null)
    | ({
        relationTo: 'social-medias'
        value: number | SocialMedia
      } | null)
    | ({
        relationTo: 'organization_access'
        value: number | OrganizationAccess
      } | null)
    | ({
        relationTo: 'flags'
        value: number | Flag
      } | null)
    | ({
        relationTo: 'flagComments'
        value: number | FlagComment
      } | null)
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  taskStatus?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  completedAt?: string | null
  totalTried?: number | null
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string
        completedAt: string
        taskSlug: 'inline' | 'flagInactiveAccounts' | 'detectRisks'
        taskID: string
        input?:
          | {
              [k: string]: unknown
            }
          | unknown[]
          | string
          | number
          | boolean
          | null
        output?:
          | {
              [k: string]: unknown
            }
          | unknown[]
          | string
          | number
          | boolean
          | null
        state: 'failed' | 'succeeded'
        error?:
          | {
              [k: string]: unknown
            }
          | unknown[]
          | string
          | number
          | boolean
          | null
        id?: string | null
      }[]
    | null
  taskSlug?: ('inline' | 'flagInactiveAccounts' | 'detectRisks') | null
  queue?: string | null
  waitUntil?: string | null
  processing?: boolean | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number
  document?:
    | ({
        relationTo: 'organization'
        value: number | Organization
      } | null)
    | ({
        relationTo: 'welcome-emails'
        value: number | WelcomeEmail
      } | null)
    | ({
        relationTo: 'users'
        value: number | User
      } | null)
    | ({
        relationTo: 'social-medias'
        value: number | SocialMedia
      } | null)
    | ({
        relationTo: 'organization_access'
        value: number | OrganizationAccess
      } | null)
    | ({
        relationTo: 'policies'
        value: number | Policy
      } | null)
    | ({
        relationTo: 'acknowledgments'
        value: number | Acknowledgment
      } | null)
    | ({
        relationTo: 'flags'
        value: number | Flag
      } | null)
    | ({
        relationTo: 'flagHistory'
        value: number | FlagHistory
      } | null)
    | ({
        relationTo: 'flagComments'
        value: number | FlagComment
      } | null)
    | ({
        relationTo: 'audit_log'
        value: number | AuditLog
      } | null)
    | ({
        relationTo: 'payload-jobs'
        value: number | PayloadJob
      } | null)
  globalSlug?: string | null
  user: {
    relationTo: 'users'
    value: number | User
  }
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number
  user: {
    relationTo: 'users'
    value: number | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organization_select".
 */
export interface OrganizationSelect<T extends boolean = true> {
  name?: T
  type?: T
  parentOrg?: T
  admin?: T
  backupAdmins?: T
  email?: T
  phone?: T
  status?: T
  description?: T
  delegatedPermissions?: T
  path?: T
  depth?: T
  children?: T
  disabled?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "welcome-emails_select".
 */
export interface WelcomeEmailsSelect<T extends boolean = true> {
  instructions?: T
  responsibilities?:
    | T
    | {
        responsibility?: T
        id?: T
      }
  policyLinks?:
    | T
    | {
        id?: T
        title?: T
        url?: T
      }
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T
  role?: T
  status?: T
  admin_policy_agreement?: T
  date_of_last_policy_review?: T
  date_of_last_training?: T
  organizations?: T
  reject_reason?: T
  updatedAt?: T
  createdAt?: T
  email?: T
  resetPasswordToken?: T
  resetPasswordExpiration?: T
  salt?: T
  hash?: T
  loginAttempts?: T
  lockUntil?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-medias_select".
 */
export interface SocialMediasSelect<T extends boolean = true> {
  name?: T
  profileUrl?: T
  platform?: T
  contactEmail?: T
  contactPhone?: T
  passwordUpdatedAt?: T
  isEnabledTwoFactor?: T
  isInUseSecurePassword?: T
  isAcceptedPolicies?: T
  isCompletedTrainingAccessibility?: T
  isCompletedTrainingRisk?: T
  isCompletedTrainingBrand?: T
  hasKnowledgeStandards?: T
  organization?: T
  primaryAdmin?: T
  backupAdmin?: T
  status?: T
  deactivationReason?: T
  inactiveFlag?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organization_access_select".
 */
export interface OrganizationAccessSelect<T extends boolean = true> {
  organization?: T
  user?: T
  type?: T
  start_date?: T
  end_date?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies_select".
 */
export interface PoliciesSelect<T extends boolean = true> {
  version?: T
  text?: T
  author?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "acknowledgments_select".
 */
export interface AcknowledgmentsSelect<T extends boolean = true> {
  policy?: T
  user?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flags_select".
 */
export interface FlagsSelect<T extends boolean = true> {
  flagType?: T
  affectedEntity?: T
  organization?: T
  status?: T
  detectionDate?: T
  source?: T
  lastActivity?: T
  history?: T
  description?: T
  suggestedAction?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flagHistory_select".
 */
export interface FlagHistorySelect<T extends boolean = true> {
  flag?: T
  user?: T
  action?: T
  prevStatus?: T
  newStatus?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flagComments_select".
 */
export interface FlagCommentsSelect<T extends boolean = true> {
  flag?: T
  user?: T
  comment?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "audit_log_select".
 */
export interface AuditLogSelect<T extends boolean = true> {
  user?: T
  action?: T
  entity?: T
  prev?: T
  current?: T
  organizations?: T
  document?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T
  taskStatus?: T
  completedAt?: T
  totalTried?: T
  hasError?: T
  error?: T
  log?:
    | T
    | {
        executedAt?: T
        completedAt?: T
        taskSlug?: T
        taskID?: T
        input?: T
        output?: T
        state?: T
        error?: T
        id?: T
      }
  taskSlug?: T
  queue?: T
  waitUntil?: T
  processing?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T
  globalSlug?: T
  user?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T
  key?: T
  value?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T
  batch?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskFlagInactiveAccounts".
 */
export interface TaskFlagInactiveAccounts {
  input?: unknown
  output: {
    success: boolean
    message: string
  }
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskDetectRisks".
 */
export interface TaskDetectRisks {
  input?: unknown
  output: {
    success: boolean
    message: string
  }
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
